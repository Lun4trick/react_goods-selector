{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClickAdd","item","setState","this","checkItemIsSelected","className","type","onClick","map","itemcheck","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,mBAFlB,EAKEC,eAAiB,SAACC,GAAD,OACf,EAAKH,MAAMC,eAAX,UAA+BE,EAA/B,gBACI,EAAKC,SAAS,CAAEH,aAAc,sBAC9B,EAAKG,SAAS,CAAEH,aAAa,GAAD,OAAKE,EAAL,mBARpC,4CAWE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aACFK,EAAwC,sBAAjBL,EAE7B,OACE,uBAAMM,UAAU,oBAAhB,UAEE,qBAAIA,UAAU,sCAAd,oBACMN,GAEDK,GAED,wBACE,UAAQ,cACRE,KAAK,SACLC,QAAS,kBACP,EAAKL,SAAS,CAAEH,aAAc,uBAEhCM,UAAU,mBAKhB,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAP,GACT,IAAMQ,EAAYV,IAAY,UAAQE,EAAR,gBAE9B,OACE,qBAEE,UAAQ,OACRI,UAAWK,IACT,CAAE,+BAAgCD,IAJtC,UAOE,6BACE,wBACE,UACGA,EACG,eACA,YAENH,KAAK,SACLD,UAAWK,IACT,SACA,CAAE,UAAWD,IAEfF,QAAS,WACP,EAAKP,eAAL,UAAuBC,KAZ3B,SAeGQ,EACG,IACA,QAIR,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGJ,MA7BEA,iBAzCvB,GAAyBU,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.562bc77c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam is selected',\n  };\n\n  handleClickAdd = (item: string) => (\n    this.state.selectedGood === `${item} is selected`\n      ? this.setState({ selectedGood: 'No goods selected' })\n      : this.setState({ selectedGood: `${item} is selected` })\n  );\n\n  render() {\n    const { selectedGood } = this.state;\n    const checkItemIsSelected = (selectedGood !== 'No goods selected');\n\n    return (\n      <main className=\"section container\">\n\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood}`}\n\n          { (checkItemIsSelected) && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              onClick={() => (\n                this.setState({ selectedGood: 'No goods selected' })\n              )}\n              className=\"delete ml-3\"\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(item => {\n              const itemcheck = selectedGood === `${item} is selected`;\n\n              return (\n                <tr\n                  key={item}\n                  data-cy=\"Good\"\n                  className={classNames(\n                    { 'has-background-success-light': itemcheck },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        (itemcheck)\n                          ? 'RemoveButton'\n                          : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={classNames(\n                        'button',\n                        { 'is-info': itemcheck },\n                      )}\n                      onClick={() => {\n                        this.handleClickAdd(`${item}`);\n                      }}\n                    >\n                      {itemcheck\n                        ? '-'\n                        : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {item}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}